wandb_version: 1

policy_type:
  desc: null
  value: MlpPolicy
total_timesteps:
  desc: null
  value: 2000000
learning_rate:
  desc: null
  value: 0.0003
env_name:
  desc: null
  value: Traffic UPRM
_wandb:
  desc: null
  value:
    code_path: code/dqn_train.py
    python_version: 3.11.3
    cli_version: 0.15.2
    framework: torch
    is_jupyter_run: false
    is_kaggle_kernel: false
    start_time: 1684125746.04167
    t:
      1:
      - 1
      - 55
      2:
      - 1
      - 55
      3:
      - 1
      - 16
      - 22
      - 23
      - 35
      4: 3.11.3
      5: 0.15.2
      8:
      - 5
algo:
  desc: null
  value: DQN
policy_class:
  desc: null
  value: <class 'stable_baselines3.dqn.policies.DQNPolicy'>
device:
  desc: null
  value: cuda
env:
  desc: null
  value: <stable_baselines3.common.vec_env.vec_monitor.VecMonitor object at 0x7f2879789550>
_vec_normalize_env:
  desc: null
  value: None
verbose:
  desc: null
  value: 1
policy_kwargs:
  desc: null
  value: '{}'
num_timesteps:
  desc: null
  value: 0
_total_timesteps:
  desc: null
  value: 2000000
_num_timesteps_at_start:
  desc: null
  value: 0
seed:
  desc: null
  value: None
action_noise:
  desc: null
  value: None
start_time:
  desc: null
  value: 1684125808626757484
tensorboard_log:
  desc: null
  value: runs/5tnnx7mv
lr_schedule:
  desc: null
  value: <function constant_fn.<locals>.func at 0x7f2825547c40>
_last_obs:
  desc: null
  value: '[[0 0 0 ... 0 0 0]]'
_last_episode_starts:
  desc: null
  value: '[ True]'
_last_original_obs:
  desc: null
  value: None
_episode_num:
  desc: null
  value: 0
use_sde:
  desc: null
  value: 'False'
sde_sample_freq:
  desc: null
  value: -1
_current_progress_remaining:
  desc: null
  value: 1
_stats_window_size:
  desc: null
  value: 100
ep_info_buffer:
  desc: null
  value: deque([], maxlen=100)
ep_success_buffer:
  desc: null
  value: deque([], maxlen=100)
_n_updates:
  desc: null
  value: 0
_logger:
  desc: null
  value: <stable_baselines3.common.logger.Logger object at 0x7f2968de0bd0>
_custom_logger:
  desc: null
  value: 'False'
observation_space:
  desc: null
  value: Box([0 0 0 ... 0 0 0], [2 2 2 ... 2 2 2], (21617,), int32)
action_space:
  desc: null
  value: Discrete(256)
n_envs:
  desc: null
  value: 1
buffer_size:
  desc: null
  value: 100
batch_size:
  desc: null
  value: 32
learning_starts:
  desc: null
  value: 50000
tau:
  desc: null
  value: 1.0
gamma:
  desc: null
  value: 0.99
gradient_steps:
  desc: null
  value: 1
optimize_memory_usage:
  desc: null
  value: 'False'
replay_buffer_class:
  desc: null
  value: <class 'stable_baselines3.common.buffers.ReplayBuffer'>
replay_buffer_kwargs:
  desc: null
  value: '{}'
_episode_storage:
  desc: null
  value: None
train_freq:
  desc: null
  value: 'TrainFreq(frequency=4, unit=<TrainFrequencyUnit.STEP: ''step''>)'
actor:
  desc: null
  value: None
replay_buffer:
  desc: null
  value: <stable_baselines3.common.buffers.ReplayBuffer object at 0x7f287978bfd0>
use_sde_at_warmup:
  desc: null
  value: 'False'
exploration_initial_eps:
  desc: null
  value: 1.0
exploration_final_eps:
  desc: null
  value: 0.05
exploration_fraction:
  desc: null
  value: 0.1
target_update_interval:
  desc: null
  value: 10000
_n_calls:
  desc: null
  value: 0
max_grad_norm:
  desc: null
  value: 10
exploration_rate:
  desc: null
  value: 0.0
policy:
  desc: null
  value: "DQNPolicy(\n  (q_net): QNetwork(\n    (features_extractor): FlattenExtractor(\n\
    \      (flatten): Flatten(start_dim=1, end_dim=-1)\n    )\n    (q_net): Sequential(\n\
    \      (0): Linear(in_features=21617, out_features=64, bias=True)\n      (1):\
    \ ReLU()\n      (2): Linear(in_features=64, out_features=64, bias=True)\n    \
    \  (3): ReLU()\n      (4): Linear(in_features=64, out_features=256, bias=True)\n\
    \    )\n  )\n  (q_net_target): QNetwork(\n    (features_extractor): FlattenExtractor(\n\
    \      (flatten): Flatten(start_dim=1, end_dim=-1)\n    )\n    (q_net): Sequential(\n\
    \      (0): Linear(in_features=21617, out_features=64, bias=True)\n      (1):\
    \ ReLU()\n      (2): Linear(in_features=64, out_features=64, bias=True)\n    \
    \  (3): ReLU()\n      (4): Linear(in_features=64, out_features=256, bias=True)\n\
    \    )\n  )\n)"
q_net:
  desc: null
  value: "QNetwork(\n  (features_extractor): FlattenExtractor(\n    (flatten): Flatten(start_dim=1,\
    \ end_dim=-1)\n  )\n  (q_net): Sequential(\n    (0): Linear(in_features=21617,\
    \ out_features=64, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=64,\
    \ out_features=64, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=64,\
    \ out_features=256, bias=True)\n  )\n)"
q_net_target:
  desc: null
  value: "QNetwork(\n  (features_extractor): FlattenExtractor(\n    (flatten): Flatten(start_dim=1,\
    \ end_dim=-1)\n  )\n  (q_net): Sequential(\n    (0): Linear(in_features=21617,\
    \ out_features=64, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=64,\
    \ out_features=64, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=64,\
    \ out_features=256, bias=True)\n  )\n)"
batch_norm_stats:
  desc: null
  value: '[]'
batch_norm_stats_target:
  desc: null
  value: '[]'
exploration_schedule:
  desc: null
  value: <function get_linear_fn.<locals>.func at 0x7f2825547920>
